angular.module("frontendAngularClientApp")
    .factory("____Service", function ($http, Upload) {
        return {
            ListPaginated: function (start, number, tableState, filterName) {
                return $http.get("/api/____/getfiltered?start=" + start + "&number=" + number + "&tableState=" + JSON.stringify(tableState) + "&filterName=" + filterName);
            }
            //, List: function () { return $http.get("/api/____"); },
            //, GetEmptyEntity: function () { return $http.get("/api/____/empty"); }
            //, Post: function (entity) {
            //    if (entity.id == null || entity.id == 0)
            //        return $http.post("/api/____", entity);
            //    else
            //        return $http.put("/api/____/" + entity.id, entity);
            //}
            //, Get: function (id) { return $http.get("/api/____/" + id); }
        };
    })
    .controller("____Controller", function ($scope, $state, $rootScope, ____Service, $uibModal, $timeout) {
        $scope.entity = null;

        var refresh = function () {
            $rootScope.IsBusy = true;
            ____Service.Get($state.params.id).then(function (resp) {
                $scope.entity = resp.data;
                $rootScope.SetPageTitle("Client", $scope.entity.prettyName);
                $rootScope.IsBusy = false;
            }, $rootScope.raiseErrorDelegate);
        };

        $scope.edit = function () {
            var modalInstance = $uibModal.open({
                component: "clientComponent",
                resolve: { entity: function () { return $scope.entity; } }
            });
            modalInstance.result.then(function (selectedItem) {
                refresh();
            }, function () {
                // alert(2);
            });
        };

        (function () {
            refresh();
        })();
    })
    .controller("____sController", function ($scope, $state, $rootScope, ____Service, $uibModal, $timeout) {
        $scope.entitylist = null;
        $scope.entity = null;

        $scope.refresh = function (tableState) {
			$rootScope.SetPageTitle("____", "");
            $rootScope.IsBusy = true;
			var pagination = tableState.pagination;
            var start = pagination.start || 0;     // This is NOT the page number, but the index of item in the list that you want to use to display the table.
            var number = pagination.number || 0;  // Number of entries showed per page.
            ____Service.ListPaginated(start, number, tableState).then(function (resp) {
                $scope.entitylist = resp.data;
                $rootScope.IsBusy = false;
            }, $rootScope.raiseErrorDelegate);
        };

        $scope.add = function () {
            var modalInstance = $uibModal.open({
                component: "clientComponent",
                // resolve: {
                // items: function () {return $scope.items;}
                // }
            });
            modalInstance.result.then(function (selectedItem) {
                refresh();
            }, function () {
                // alert(2);
            });

        };

        //(function () {})();
    });